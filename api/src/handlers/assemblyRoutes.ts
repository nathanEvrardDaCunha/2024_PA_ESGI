import express, {Request, Response} from "express";import {createAssembly, getAllAssembly, getAssemblyById} from "../repository/assemblyRepository";const assemblyRouter = express.Router();assemblyRouter.get('/', async (req: Request, res: Response) => {	//TODO : Check all argument validation	//TODO : Write the service rules		try {		const assemblies = await getAllAssembly();		res.status(200).json(assemblies);	} catch (error) {		console.error('Error fetching assemblies:', error);		res.status(500).json({error: 'Internal Server Error'});	}});assemblyRouter.get('/:id', async (req: Request, res: Response) => {	//TODO : Check all argument validation	//TODO : Write the service rules		try {		const assembly = await getAssemblyById(req.params.id);		if (!assembly) {			return res.status(404).json({ error: 'Assembly not found' });		}		res.status(200).json(assembly);	} catch (error) {		console.error('Error fetching assembly by ID:', error);		res.status(500).json({ error: 'Internal Server Error' });	}});assemblyRouter.post('/', async (req: Request, res: Response) => {	//TODO : Check all argument validation	//TODO : Write the service rules		try {		const newAssembly = await createAssembly(req.body);		res.status(201).json(newAssembly);	} catch (error) {		console.error('Error creating assembly:', error);		res.status(500).json({error: 'Internal Server Error'});	}});export default assemblyRouter;