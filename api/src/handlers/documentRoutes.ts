import express, {Request, Response} from "express";import {createDocument, getAllDocument, getDocumentById, updateDocument} from "../repository/documentRepository";const documentRouter = express.Router();documentRouter.get('/', async (req: Request, res: Response) => {	//TODO : Check all argument validation	//TODO : Write the service rules		try {		const document = await getAllDocument();		res.status(200).json(document);	} catch (error) {		console.error('Error fetching documents:', error);		res.status(500).json({error: 'Internal Server Error'});	}});documentRouter.get('/:id', async (req: Request, res: Response) => {	//TODO : Check all argument validation	//TODO : Write the service rules		try {		const document = await getDocumentById(req.params.id);		if (!document) {			return res.status(404).json({ error: 'Document not found' });		}		res.status(200).json(document);	} catch (error) {		console.error('Error fetching document by ID:', error);		res.status(500).json({ error: 'Internal Server Error' });	}});documentRouter.post('/', async (req: Request, res: Response) => {	try {		const newDocument = await createDocument(req.body);		res.status(201).json(newDocument);	} catch (error) {		console.error('Error creating document:', error);		if (error instanceof Error) {			console.error('Error creating document:', error.message);			if (error.message === 'Missing required fields') {				res.status(400).json({ error: 'Missing required fields' });			} else {				res.status(500).json({ error: 'Internal Server Error', message: error.message });			}		} else {			res.status(500).json({ error: 'Internal Server Error' });		}	}});documentRouter.patch('/:id', async (req: Request, res: Response) => {	// TODO: Check all argument validation	// TODO: Write the service rules		try {		const { id } = req.params;		const updatedDocument = await updateDocument(id, req.body);				if (!updatedDocument) {			return res.status(404).json({ error: 'Document not found' });		}				res.status(200).json(updatedDocument);	} catch (error) {		console.error('Error updating document:', error);		res.status(500).json({ error: 'Internal Server Error' });	}});export default documentRouter;